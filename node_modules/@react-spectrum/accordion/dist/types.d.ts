import { AriaLabelingProps, DOMProps, DOMRef, StyleProps } from "@react-types/shared";
import { DisclosureGroupProps, DisclosurePanelProps, DisclosureProps } from "react-aria-components";
import React from "react";
export interface SpectrumAccordionProps extends Omit<DisclosureGroupProps, 'className' | 'style' | 'children'>, StyleProps, DOMProps {
    /** The disclosures within the accordion group. */
    children: React.ReactNode;
}
export function Accordion(props: SpectrumAccordionProps, ref: DOMRef<HTMLDivElement>): React.JSX.Element;
export interface SpectrumDisclosureProps extends Omit<DisclosureProps, 'className' | 'style' | 'children'>, AriaLabelingProps {
    /** The contents of the disclosure. The first child should be the header, and the second child should be the panel. */
    children: React.ReactNode;
}
export function Disclosure(props: SpectrumDisclosureProps, ref: DOMRef<HTMLDivElement>): React.JSX.Element;
export interface SpectrumDisclosurePanelProps extends Omit<DisclosurePanelProps, 'className' | 'style' | 'children'>, DOMProps, AriaLabelingProps {
    /** The contents of the accordion panel. */
    children: React.ReactNode;
}
export function DisclosurePanel(props: SpectrumDisclosurePanelProps, ref: DOMRef<HTMLDivElement>): React.JSX.Element;
export interface SpectrumDisclosureHeaderProps extends DOMProps, AriaLabelingProps {
    /**
     * The heading level of the disclosure header.
     * @default 3
     */
    level?: number;
    /** The contents of the disclosure header. */
    children: React.ReactNode;
}
export function DisclosureHeader(props: SpectrumDisclosureHeaderProps, ref: DOMRef<HTMLHeadingElement>): React.JSX.Element;
/** A group of disclosures that can be expanded and collapsed. */
export const Accordion: (props: SpectrumAccordionProps & {
    ref?: DOMRef<HTMLDivElement>;
}) => ReturnType<typeof Accordion>;
/** A collapsible section of content composed of a heading that expands and collapses a panel. */
export const Disclosure: (props: SpectrumDisclosureProps & {
    ref?: DOMRef<HTMLDivElement>;
}) => ReturnType<typeof Disclosure>;
/** The panel that contains the content of an disclosure. */
export const DisclosurePanel: (props: SpectrumDisclosurePanelProps & {
    ref?: DOMRef<HTMLDivElement>;
}) => ReturnType<typeof DisclosurePanel>;
/** The heading of the disclosure. */
export const DisclosureHeader: (props: SpectrumDisclosureHeaderProps & {
    ref?: DOMRef<HTMLDivElement>;
}) => ReturnType<typeof DisclosureHeader>;

//# sourceMappingURL=types.d.ts.map
